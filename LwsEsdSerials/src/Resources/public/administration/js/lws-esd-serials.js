(function(){var e={731:function(){Shopware.Component.override("sw-bulk-edit-product",{computed:{restrictedFields(){let e=this.$super("restrictedFields"),t=e.indexOf("maxPurchase");return t>-1?e.toSpliced(t,1):e}}})}},t={};function s(n){var i=t[n];if(void 0!==i)return i.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,s),a.exports}s.p="bundles/lwsesdserials/",window?.__sw__?.assetPath&&(s.p=window.__sw__.assetPath+"/bundles/lwsesdserials/"),function(){"use strict";let{Component:e}=Shopware;e.override("sw-product-detail-base",{template:"{% block sw_product_detail_base_price_card %}\n\n    <lws-esd-serials-listing v-show=\"productStates.includes('is-download')\"></lws-esd-serials-listing>\n\n    {% parent %}\n{% endblock %}\n\n\n{% block sw_product_detail_deliverability_downloadable_info_form %}\n\n    {% parent %}\n\n    <max-purchase-input-download-products></max-purchase-input-download-products>\n\n{% endblock %}\n"});let{Component:t}=Shopware,{Mixin:n}=Shopware,{mapState:i,mapPropertyErrors:a,mapGetters:r}=Shopware.Component.getComponentHelper();t.register("max-purchase-input-download-products",{template:'\n<sw-inherit-wrapper\n        v-if="showModeSetting"\n        v-model:value="product.maxPurchase"\n        class="sw-product-deliverability__max-purchase"\n        :has-parent="!!parentProduct.id"\n        :inherited-value="parentProduct.maxPurchase"\n>\n    <template #content="props">\n\n        <sw-number-field\n                :map-inheritance="props"\n                number-type="int"\n                :allow-empty="true"\n                :min="0"\n                :error="productMaxPurchaseError"\n                :label="$tc(\'sw-product.settingsForm.labelMaxPurchase\')"\n                :placeholder="$tc(\'sw-product.settingsForm.placeholderMaxPurchase\')"\n                :disabled="props.isInherited || !allowEdit"\n                :value="props.currentValue"\n                @update:value="props.updateCurrentValue"\n        />\n    </template>\n</sw-inherit-wrapper>',compatConfig:Shopware.compatConfig,mixins:[n.getByName("placeholder")],props:{allowEdit:{type:Boolean,required:!1,default:!0}},computed:{...i("swProductDetail",["product","parentProduct","loading"]),...r("swProductDetail",["showModeSetting"]),...a("product",["maxPurchase"])}}),s(731),Shopware.Component.override("sw-order-line-items-grid",{template:'{% block sw_order_line_items_grid_column_payload_options %}\n    {% parent() %}\n\n    <template v-if="item.extensions && item.extensions.lwsEsdSerials">\n\n        <div>\n            <b>{{ $tc(\'lws-esd-serials.serialNumber\') }}:</b>\n\n            <div v-for="serial in item.extensions.lwsEsdSerials">\n                {{ serial.serialNumber }}\n            </div>\n        </div>\n\n    </template>\n\n{% endblock %}\n'});var l=JSON.parse('{"lws-esd-serials":{"serialNumber":"Seriennummer","serials-listing":{"cardTitle":"Seriennummern","addButtonLabel":"Hinzuf\xfcgen","detailOpenButtonLabel":"\xd6ffnen","titleEmptyLayerList":"Noch keine Seriennummern vorhanden.","serialNumber":"Seriennummer","assignDate":"Zuweisungsdatum","detailOrder":"Bestellung \xf6ffnen"},"serials-detail":{"title":"Seriennummer","cardTitle":"Seriennummer","labelSerial":"Seriennummer","successMessage":"Erfolgreich gespeichert.","notificationSaveErrorMessageRequiredFieldsInvalid":"Eingabe nicht korrekt.","cancel":"Abbrechen","save":"Speichern"}}}'),o=JSON.parse('{"lws-esd-serials":{"serialNumber":"Serial number","serials-listing":{"cardTitle":"Serial number","addButtonLabel":"Add","detailOpenButtonLabel":"Open","titleEmptyLayerList":"No serial numbers.","serialNumber":"Serial number","assignDate":"Assign date","detailOrder":"Open order"},"serials-detail":{"cardTitle":"Serial number","title":"Serial number","labelSerial":"Serial number","successMessage":"Successful saved.","notificationSaveErrorMessageRequiredFieldsInvalid":"Input invalid.","cancel":"Cancel","save":"Save"}}}');let{Mixin:d,Component:c,Context:p}=Shopware,{Criteria:m,EntityCollection:u}=Shopware.Data,{mapState:w,mapGetters:h}=c.getComponentHelper();Shopware.Component.register("lws-esd-serials-listing",{template:'{% block list %}\n\n    <div>\n        <sw-card\n                class="serials-listing__card"\n                :is-loading="isLoading"\n                position-identifier="serials-listing__card">\n\n            <template #title>\n                {% block card_title %}\n                    <div class="sw-card__title">\n\n                        {% block card_title_text %}\n                            {{ $tc(\'lws-esd-serials.serials-listing.cardTitle\') }}\n                        {% endblock %}\n\n                    </div>\n                {% endblock %}\n            </template>\n\n            <template #header-right>\n                <sw-button\n                        class="serials-listing__add"\n                        :disabled="!acl.can(\'lws_esd_serials:create\')"\n                        variant="primary"\n                        @click="onOpen">\n                    {{ $tc(\'lws-esd-serials.serials-listing.addButtonLabel\') }}\n                </sw-button>\n\n            </template>\n\n            <template #grid>\n\n                <sw-container rows="auto auto">\n\n                    {% block listing %}\n                        <sw-entity-listing\n                                v-if="dataEntries.length > 0"\n                                ref="entityListing"\n                                identifier="serials-listing-entity-listing"\n                                :items="dataEntries"\n                                :data-source="dataEntries"\n                                :columns="columns"\n                                :repository="repository"\n                                :plain-appearance="true"\n                                :full-page="false"\n                                :show-settings="false"\n                                :allow-edit="acl.can(\'lws_esd_serials:update\')"\n                                :allow-inline-edit="acl.can(\'lws_esd_serials:update\')"\n                                :allow-delete="acl.can(\'lws_esd_serials:delete\')"\n                                @delete-item-finish="loadDataEntries"\n                                @items-delete-finish="loadDataEntries"\n                        >\n\n                            <template #column-assignDate="{ item }">\n                                <sw-time-ago :date="item.assignDate" />\n                            </template>\n\n                            <template #detail-action="{ item }">\n                                {% block bec_serials_serial_listing_order_button %}\n                                    <sw-context-menu-item\n                                            v-if="item.orderId"\n                                            class="sw-order-list-order-view-action"\n                                            :router-link="{ name: \'sw.order.detail\', params: { id: item.orderId } }"\n                                    >\n                                        {{ $tc(\'lws-esd-serials.serials-listing.detailOrder\') }}\n                                    </sw-context-menu-item>\n                                {% endblock %}\n                            </template>\n\n                            <template #column-position="{ item }">\n                                <template>\n                                    {{ item.position }}\n                                </template>\n                            </template>\n\n                        </sw-entity-listing>\n                    {% endblock %}\n\n                    {% block sw_product_properties_filled_state_body_empty_state %}\n                        <sw-empty-state\n                                v-if="dataEntries.length <= 0"\n                                :absolute="false"\n                                :show-description="false"\n                                :title="$tc(\'lws-esd-serials.serials-listing.titleEmptyLayerList\')">\n                            <template #icon>\n\n                                {% block sw_product_properties_filled_state_body_empty_state_image %}\n                                    <img\n                                            :src="assetFilter(\'/administration/static/img/empty-states/products-empty-state.svg\')"\n                                            :alt="$tc(\'lws-esd-serials.serials-listing.titleEmptyLayerList\')"\n                                    >\n                                {% endblock %}\n                            </template>\n                        </sw-empty-state>\n\n                    {% endblock %}\n\n                    <sw-loader\n                            v-if="isLoading"/>\n\n                </sw-container>\n            </template>\n        </sw-card>\n\n\n        <sw-modal\n                v-if="showDetailModal"\n                :title="$tc(\'lws-esd-serials.serials-detail.title\')"\n                @modal-close="onDetailModalCancel">\n\n            <lws-esd-serials-detail\n                    :entity="selectedEntry"\n                    ref="detail"\n                    @afterSave="onAfterSave"></lws-esd-serials-detail>\n\n            <template #modal-footer>\n                <sw-button\n                        size="small"\n                        @click="onDetailModalCancel">\n                    {{ $tc(\'lws-esd-serials.serials-detail.cancel\') }}\n                </sw-button>\n                <sw-button\n                        class="sw-product-add-properties-modal__button-save"\n                        variant="primary"\n                        size="small"\n                        @click="onDetailSave">\n                    {{ $tc(\'lws-esd-serials.serials-detail.save\') }}\n                </sw-button>\n\n            </template>\n\n        </sw-modal>\n\n    </div>\n\n{% endblock %}\n',inject:["repositoryFactory","acl"],mixins:[d.getByName("placeholder"),d.getByName("notification")],props:{isAssociation:{type:Boolean,required:!1,default:!0}},data(){return{dataEntries:[],newLayer:null,isLoading:!1,newProperties:[],showDetailModal:!1,selectedEntry:null}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")},repository(){return this.repositoryFactory.create("lws_esd_serials")},columns(){return[{property:"serialNumber",allowResize:!0,inlineEdit:"string",label:this.$tc("lws-esd-serials.serials-listing.serialNumber"),sortable:!0},{property:"assignDate",allowResize:!0,label:this.$tc("lws-esd-serials.serials-listing.assignDate"),sortable:!0}]},...w("swProductDetail",["product"])},created(){this.createdComponent()},methods:{createdComponent(){this.loadDataEntries()},onDetailModalCancel(){this.showDetailModal=!1,this.loadDataEntries()},onAfterSave(){this.showDetailModal=!1,this.loadDataEntries()},onOpen(){this.selectedEntry=this.repository.create(),this.selectedEntry.productId=this.product.id,this.showDetailModal=!0},onDetailSave(){this.$refs.detail.save()},emitDetailClicked(e){this.selectedEntry=e,this.showDetailModal=!0},loadDataEntries(){this.isLoading=!0;let e=new m(1,10);return e.addSorting(m.sort("serialNumber","ASC",!1)),e.addFilter(m.equals("productId",this.product.id)),this.repository.search(e,p.api).then(e=>{this.dataEntries=e}).catch(()=>{this.dataEntries=[]}).finally(()=>{this.isLoading=!1})}}});let{Mixin:g,Component:b,Context:_}=Shopware,{mapState:y,mapGetters:v,mapPropertyErrors:f}=b.getComponentHelper();Shopware.Component.register("lws-esd-serials-detail",{template:'<div>\n    <template v-if="isLoading">\n        <sw-skeleton variant="detail-bold"/>\n        <sw-skeleton/>\n    </template>\n\n    <template v-else>\n\n        {% block lws_esd_serials_detail_base_basic_info_card %}\n\n            <sw-card\n                    position-identifier="serials-detail"\n                    :title="$tc(\'lws-esd-serials.serials-detail.cardTitle\')">\n                <sw-container\n                        columns="1fr"\n                        gap="0px 30px">\n\n                    <sw-textarea-field\n                            v-model:value="entity.serialNumber"\n                            type="textarea"\n                            validation="required"\n                            required></sw-textarea-field>\n\n                </sw-container>\n\n            </sw-card>\n\n        {% endblock %}\n    </template>\n\n</div>\n',inject:["repositoryFactory","acl"],mixins:[g.getByName("placeholder"),g.getByName("notification")],props:{entity:{type:Object,required:!0,default:!1}},data(){return{isLoading:!1}},computed:{...f("entity",["name"]),repository(){return this.repositoryFactory.create("lws_esd_serials")}},watch:{},created(){this.createdComponent()},methods:{createdComponent(){},save(){this.isLoading=!0;let e=this.splitByLines(this.entity),t=0;e.forEach(s=>{this.repository.save(s).then(()=>{this.isLoading=!1,t==e.length-1&&(this.createNotificationSuccess({title:"",message:this.$tc("lws-esd-serials.serials-detail.successMessage")}),this.$emit("afterSave",s)),t++}).catch(e=>{throw this.isLoading=!1,this.createNotificationError({message:this.$tc("serials-detail.notificationSaveErrorMessageRequiredFieldsInvalid")}),e})})},splitByLines(e){let t=[];return e&&e.serialNumber&&e.serialNumber.split(/\r?\n|\r|\n/g).forEach(s=>{let n=this.repository.create();n.productId=e.productId,n.serialNumber=s,t.push(n)}),console.log(t),t}}});let{Module:S}=Shopware;S.register("lws-esd-serials",{type:"plugin",name:"lws-esd-serials",color:"#57D9A3",icon:"regular-products",snippets:{"de-DE":l,"en-GB":o}})}()})();
//# sourceMappingURL=lws-esd-serials.js.map